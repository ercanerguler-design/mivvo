generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Account_userId_fkey")

  @@unique([provider, providerAccountId], map: "Account_provider_providerAccountId_key")
  @@index([userId], map: "Account_userId_fkey")
  @@index([userId], map: "idx_account_user_id")
}

model payment {
  id            String   @id @default(cuid())
  userId        String
  amount        Int
  credits       Int
  createdAt     DateTime @default(now())
  paymentMethod String   @default("demo")
  planId        String   @default("basic")
  status        String   @default("pending")
  transactionId String?
  provider      String   @default("demo")
  user          user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Payment_userId_fkey")

  @@index([userId], map: "Payment_userId_fkey")
  @@index([userId], map: "idx_payment_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model report {
  id           String         @id @default(cuid())
  userId       String
  type         String
  vin          String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  data         String         @db.LongText
  user         user           @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Report_userId_fkey")
  reportaccess reportaccess[]

  @@index([userId], map: "Report_userId_fkey")
  @@index([userId], map: "idx_report_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model reportaccess {
  id          String    @id @default(cuid())
  userId      String
  reportId    String
  type        String
  purchasedAt DateTime  @default(now())
  expiresAt   DateTime?
  credits     Int       @default(0)
  report      report    @relation(fields: [reportId], references: [id], onDelete: Cascade, map: "ReportAccess_reportId_fkey")
  user        user      @relation(fields: [userId], references: [id], onDelete: Cascade, map: "ReportAccess_userId_fkey")

  @@unique([userId, reportId], map: "ReportAccess_userId_reportId_key")
  @@index([reportId], map: "ReportAccess_reportId_fkey")
  @@index([userId], map: "ReportAccess_userId_fkey")
  @@index([reportId], map: "idx_report_access_report_id")
  @@index([userId], map: "idx_report_access_user_id")
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique(map: "Session_sessionToken_key")
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Session_userId_fkey")

  @@index([userId], map: "Session_userId_fkey")
  @@index([userId], map: "idx_session_user_id")
}

model user {
  id             String         @id @default(cuid())
  name           String
  email          String         @unique(map: "User_email_key")
  emailVerified  DateTime?
  image          String?
  credits        Int            @default(0)
  createdAt      DateTime       @default(now())
  hashedPassword String
  surname        String
  account        account[]
  payment        payment[]
  report         report[]
  reportaccess   reportaccess[]
  session        session[]
}

model verificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
